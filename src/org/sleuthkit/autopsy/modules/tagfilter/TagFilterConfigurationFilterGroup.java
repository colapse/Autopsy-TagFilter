/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.modules.tagfilter;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import org.sleuthkit.autopsy.modules.tagfilter.TagFilter.FilterOperator;

/**
 *
 * @author root
 */
public class TagFilterConfigurationFilterGroup extends TagFilterConfigurationFilterComp {
	private final TagFilterGroup tagFilterGroup;
	/**
	 * Creates new form TagFilterConfigurationFilter
	 */
	public TagFilterConfigurationFilterGroup(TagFilterGroup pTagFilterGroup) {
		tagFilterGroup = pTagFilterGroup;
		initComponents();
		configureComponents();
	}
	
	private void configureComponents(){
		//Add Change Listeners
		comboFilterOperator.addActionListener (new ActionListener () {
			@Override
			public void actionPerformed(ActionEvent e) {
			    tagFilterGroup.setFilterOperator((FilterOperator)comboFilterOperator.getSelectedItem());
			}
		    });
		
		//Fill ComboFilterOperator
		for(FilterOperator fo : FilterOperator.values()){
			comboFilterOperator.addItem(fo);
		}
		
		
		//Set Selection
		if(tagFilterGroup.getFilterOperator() != null){
			comboFilterOperator.setSelectedItem(tagFilterGroup.getFilterOperator());
		}
		
	}
	
	@Override
	public void addButtonDeleteAction(ActionListener btnDeleteAL){
		btnDelete.addActionListener(btnDeleteAL);
	}
	
	@Override
	public void addButtonUpAction(ActionListener btnUpAL){
		btnUp.addActionListener(btnUpAL);
	}
	
	@Override
	public void addButtonDownAction(ActionListener btnDownAL){
		btnDown.addActionListener(btnDownAL);
	}
	
	public TagFilterGroup getTagFilterGroup(){
		return tagFilterGroup;
	}
	
	@Override
	public void activateButtonDown(boolean pActivate){
		btnDown.setEnabled(pActivate);
	}
	
	@Override
	public void activateButtonUp(boolean pActivate){
		btnUp.setEnabled(pActivate);
	}
	
	private void deleteFilter(TagFilterConfigurationFilterComp pTfPanel){
		if(pTfPanel instanceof TagFilterConfigurationFilter){
			tagFilterGroup.removeTagFilter(((TagFilterConfigurationFilter)pTfPanel).getTagFilter());
		}else if(pTfPanel instanceof TagFilterConfigurationFilterGroup){
			return;
		}
		
		jPanelTagFilters.remove(pTfPanel);
		
		activateMoveButtons();
		
		jPanelTagFilters.revalidate();
		jPanelTagFilters.repaint();
	}
	
	private void moveFilterUp(TagFilterConfigurationFilterComp pTfPanel){
		int oldIndex = getFilterPanelIndex(pTfPanel);
		if(oldIndex > 0){
			jPanelTagFilters.remove(pTfPanel);
			jPanelTagFilters.add(pTfPanel, oldIndex-1);
		}
		
		activateMoveButtons();
		
		jPanelTagFilters.revalidate();
		jPanelTagFilters.repaint();
	}
	
	private void moveFilterDown(TagFilterConfigurationFilterComp pTfPanel){
		int oldIndex = getFilterPanelIndex(pTfPanel);
		if(oldIndex < jPanelTagFilters.getComponentCount()-1){
			jPanelTagFilters.remove(pTfPanel);
			jPanelTagFilters.add(pTfPanel, oldIndex+1);
		}
		
		activateMoveButtons();
		
		jPanelTagFilters.revalidate();
		jPanelTagFilters.repaint();
	}
	
	private int getFilterPanelIndex(TagFilterConfigurationFilterComp pTfPanel){
		int counter = 0;
		for(Component c : jPanelTagFilters.getComponents()){
			if(c.equals(pTfPanel)){
				return counter;
			}
			counter++;
		}
		
		return -1;
	}
	
	private void activateMoveButtons(){
		int position = 0;
		for(Component c : jPanelTagFilters.getComponents()){
			if(position == 0){
				((TagFilterConfigurationFilterComp)c).activateButtonUp(false);
			}else{
				((TagFilterConfigurationFilterComp)c).activateButtonUp(true);
			}
			if(position+1 == jPanelTagFilters.getComponentCount()){
				((TagFilterConfigurationFilterComp)c).activateButtonDown(false);
			}else{
				((TagFilterConfigurationFilterComp)c).activateButtonDown(true);
			}
			
			position++;
		}
	}
	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                txtFile = new javax.swing.JLabel();
                btnAddFilter = new javax.swing.JButton();
                btnDelete = new javax.swing.JButton();
                btnDown = new javax.swing.JButton();
                btnUp = new javax.swing.JButton();
                comboFilterOperator = new javax.swing.JComboBox<>();
                borderBottom = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 32767));
                jScrollPane1 = new javax.swing.JScrollPane();
                jPanelTagFilters = new javax.swing.JPanel();

                org.openide.awt.Mnemonics.setLocalizedText(txtFile, org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilterGroup.class, "TagFilterConfigurationFilterGroup.txtFile.text")); // NOI18N

                btnAddFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/sleuthkit/autopsy/modules/tagfilter/icon_add.gif"))); // NOI18N
                org.openide.awt.Mnemonics.setLocalizedText(btnAddFilter, org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilterGroup.class, "TagFilterConfigurationFilterGroup.btnAddFilter.text")); // NOI18N
                btnAddFilter.setToolTipText(org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilterGroup.class, "TagFilterConfigurationFilterGroup.btnAddFilter.toolTipText")); // NOI18N
                btnAddFilter.setBorderPainted(false);
                btnAddFilter.setContentAreaFilled(false);
                btnAddFilter.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnAddFilterActionPerformed(evt);
                        }
                });

                btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/sleuthkit/autopsy/modules/tagfilter/icon_delete.png"))); // NOI18N
                org.openide.awt.Mnemonics.setLocalizedText(btnDelete, org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilterGroup.class, "TagFilterConfigurationFilterGroup.btnDelete.text")); // NOI18N
                btnDelete.setBorderPainted(false);
                btnDelete.setContentAreaFilled(false);
                btnDelete.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnDeleteActionPerformed(evt);
                        }
                });

                btnDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/sleuthkit/autopsy/modules/tagfilter/icon_down.png"))); // NOI18N
                org.openide.awt.Mnemonics.setLocalizedText(btnDown, org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilterGroup.class, "TagFilterConfigurationFilterGroup.btnDown.text")); // NOI18N
                btnDown.setBorderPainted(false);
                btnDown.setContentAreaFilled(false);
                btnDown.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnDownActionPerformed(evt);
                        }
                });

                btnUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/sleuthkit/autopsy/modules/tagfilter/icon_up.png"))); // NOI18N
                org.openide.awt.Mnemonics.setLocalizedText(btnUp, org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilterGroup.class, "TagFilterConfigurationFilterGroup.btnUp.text")); // NOI18N
                btnUp.setBorderPainted(false);
                btnUp.setContentAreaFilled(false);
                btnUp.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnUpActionPerformed(evt);
                        }
                });

                borderBottom.setBackground(new java.awt.Color(102, 102, 102));
                borderBottom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                jPanelTagFilters.setBackground(new java.awt.Color(210, 210, 210));
                jPanelTagFilters.setLayout(new javax.swing.BoxLayout(jPanelTagFilters, javax.swing.BoxLayout.Y_AXIS));
                jScrollPane1.setViewportView(jPanelTagFilters);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(borderBottom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(comboFilterOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                                .addComponent(btnAddFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                        .addComponent(jScrollPane1)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txtFile)
                                                .addComponent(comboFilterOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(btnAddFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(borderBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                );
        }// </editor-fold>//GEN-END:initComponents

        private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_btnDeleteActionPerformed

        private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_btnDownActionPerformed

        private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_btnUpActionPerformed

        private void btnAddFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFilterActionPerformed
                TagFilter tf = new TagFilter();
		tagFilterGroup.addTagFilter(tf);
		final TagFilterConfigurationFilter tfPanel = new TagFilterConfigurationFilter(tf);
		
		jPanelTagFilters.add(tfPanel);
		
		activateMoveButtons();
		
		tfPanel.setVisible(true);
		
		//Add Action Listeners
		tfPanel.addButtonDeleteAction(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				deleteFilter(tfPanel);
			}
		});
		
		tfPanel.addButtonDownAction(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				moveFilterDown(tfPanel);
			}
		});
		
		tfPanel.addButtonUpAction(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				moveFilterUp(tfPanel);
			}
		});
		
		jPanelTagFilters.revalidate();
		jPanelTagFilters.repaint();
        }//GEN-LAST:event_btnAddFilterActionPerformed


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.Box.Filler borderBottom;
        private javax.swing.JButton btnAddFilter;
        private javax.swing.JButton btnDelete;
        private javax.swing.JButton btnDown;
        private javax.swing.JButton btnUp;
        private javax.swing.JComboBox<FilterOperator> comboFilterOperator;
        private javax.swing.JPanel jPanelTagFilters;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel txtFile;
        // End of variables declaration//GEN-END:variables
}
