/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.modules.tagfilter;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import org.openide.util.Exceptions;
import org.sleuthkit.autopsy.casemodule.Case;
import org.sleuthkit.autopsy.casemodule.services.TagsManager;
import org.sleuthkit.autopsy.modules.tagfilter.TagFilter.FilterOperator;
import org.sleuthkit.autopsy.modules.tagfilter.TagFilter.FilterType;
import org.sleuthkit.datamodel.TagName;
import org.sleuthkit.datamodel.TskCoreException;

/**
 *
 * @author root
 */
public class TagFilterConfigurationFilter extends TagFilterConfigurationFilterComp {
	private final TagsManager tagsManager;
	private final TagFilter tagFilter;
	/**
	 * Creates new form TagFilterConfigurationFilter
	 */
	public TagFilterConfigurationFilter(TagFilter pTagFilter) {
		tagFilter = pTagFilter;
		tagsManager = Case.getCurrentCase().getServices().getTagsManager();
		initComponents();
		configureComponents();
	}
	
	private void configureComponents(){
		//Add Change Listeners
		comboTagName.addActionListener (new ActionListener () {
			@Override
			public void actionPerformed(ActionEvent e) {
			    tagFilter.setTagName(((TagNameWrapper)comboTagName.getSelectedItem()).getTagName());
			}
		    });
		comboFilterOperator.addActionListener (new ActionListener () {
			@Override
			public void actionPerformed(ActionEvent e) {
			    tagFilter.setFilterOperator((FilterOperator)comboFilterOperator.getSelectedItem());
			}
		    });
		comboFilterType.addActionListener (new ActionListener () {
			@Override
			public void actionPerformed(ActionEvent e) {
			    tagFilter.setFilterType((FilterType)comboFilterType.getSelectedItem());
			}
		    });
		
		//Fill ComboTagName
		try {
			//Fill Tags
			for(TagName tn : tagsManager.getAllTagNames()){
				comboTagName.addItem(new TagNameWrapper(tn));
			}
		} catch (TskCoreException ex) {
			Exceptions.printStackTrace(ex);
		}
		
		//Fill ComboFilterOperator
		for(FilterOperator fo : FilterOperator.values()){
			comboFilterOperator.addItem(fo);
		}
		
		//Fill ComboFilterType
		for(FilterType ft : FilterType.values()){
			comboFilterType.addItem(ft);
		}
		
		//Set Selection
		if(tagFilter.getTagName() != null){
			comboTagName.setSelectedItem(tagFilter.getTagName());
		}
		if(tagFilter.getFilterType() != null){
			comboFilterType.setSelectedItem(tagFilter.getFilterType());
		}
		if(tagFilter.getFilterOperator() != null){
			comboFilterOperator.setSelectedItem(tagFilter.getFilterOperator());
		}
		
	}
	
	@Override
	public void addButtonDeleteAction(ActionListener btnDeleteAL){
		btnDelete.addActionListener(btnDeleteAL);
	}
	
	@Override
	public void addButtonUpAction(ActionListener btnUpAL){
		btnUp.addActionListener(btnUpAL);
	}
	
	@Override
	public void addButtonDownAction(ActionListener btnDownAL){
		btnDown.addActionListener(btnDownAL);
	}
	
	public TagFilter getTagFilter(){
		return tagFilter;
	}
	
	@Override
	public void activateButtonDown(boolean pActivate){
		btnDown.setEnabled(pActivate);
	}
	
	@Override
	public void activateButtonUp(boolean pActivate){
		btnUp.setEnabled(pActivate);
	}
	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                txtFile = new javax.swing.JLabel();
                comboFilterType = new javax.swing.JComboBox<>();
                comboTagName = new javax.swing.JComboBox<>();
                btnDelete = new javax.swing.JButton();
                btnDown = new javax.swing.JButton();
                btnUp = new javax.swing.JButton();
                comboFilterOperator = new javax.swing.JComboBox<>();
                borderBottom = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 32767));

                org.openide.awt.Mnemonics.setLocalizedText(txtFile, org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilter.class, "TagFilterConfigurationFilter.txtFile.text")); // NOI18N

                comboFilterType.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                comboFilterTypeActionPerformed(evt);
                        }
                });

                btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/sleuthkit/autopsy/modules/tagfilter/icon_delete.png"))); // NOI18N
                org.openide.awt.Mnemonics.setLocalizedText(btnDelete, org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilter.class, "TagFilterConfigurationFilter.btnDelete.text")); // NOI18N
                btnDelete.setBorderPainted(false);
                btnDelete.setContentAreaFilled(false);
                btnDelete.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnDeleteActionPerformed(evt);
                        }
                });

                btnDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/sleuthkit/autopsy/modules/tagfilter/icon_down.png"))); // NOI18N
                org.openide.awt.Mnemonics.setLocalizedText(btnDown, org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilter.class, "TagFilterConfigurationFilter.btnDown.text")); // NOI18N
                btnDown.setBorderPainted(false);
                btnDown.setContentAreaFilled(false);
                btnDown.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnDownActionPerformed(evt);
                        }
                });

                btnUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/sleuthkit/autopsy/modules/tagfilter/icon_up.png"))); // NOI18N
                org.openide.awt.Mnemonics.setLocalizedText(btnUp, org.openide.util.NbBundle.getMessage(TagFilterConfigurationFilter.class, "TagFilterConfigurationFilter.btnUp.text")); // NOI18N
                btnUp.setBorderPainted(false);
                btnUp.setContentAreaFilled(false);
                btnUp.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnUpActionPerformed(evt);
                        }
                });

                borderBottom.setBackground(new java.awt.Color(102, 102, 102));
                borderBottom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(comboFilterOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboFilterType, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboTagName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                        .addComponent(borderBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txtFile)
                                                .addComponent(comboFilterType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(comboTagName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(comboFilterOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(borderBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );
        }// </editor-fold>//GEN-END:initComponents

        private void comboFilterTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFilterTypeActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_comboFilterTypeActionPerformed

        private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_btnDeleteActionPerformed

        private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_btnDownActionPerformed

        private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_btnUpActionPerformed


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.Box.Filler borderBottom;
        private javax.swing.JButton btnDelete;
        private javax.swing.JButton btnDown;
        private javax.swing.JButton btnUp;
        private javax.swing.JComboBox<FilterOperator> comboFilterOperator;
        private javax.swing.JComboBox<FilterType> comboFilterType;
        private javax.swing.JComboBox<TagNameWrapper> comboTagName;
        private javax.swing.JLabel txtFile;
        // End of variables declaration//GEN-END:variables
}
